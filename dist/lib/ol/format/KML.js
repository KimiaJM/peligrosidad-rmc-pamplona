import Feature from"ol/Feature.js";import Fill from"ol/style/Fill.js";import GeometryCollection from"ol/geom/GeometryCollection.js";import Icon from"ol/style/Icon.js";import Circle from"ol/style/Circle.js";import ImageState from"ol/ImageState.js";import LineString from"ol/geom/LineString.js";import MultiLineString from"ol/geom/MultiLineString.js";import MultiPoint from"ol/geom/MultiPoint.js";import MultiPolygon from"ol/geom/MultiPolygon.js";import Point from"ol/geom/Point.js";import Polygon from"ol/geom/Polygon.js";import Stroke from"ol/style/Stroke.js";import Style from"ol/style/Style.js";import Text from"ol/style/Text.js";import{toString}from"ol/color.js";import XMLFeature from"ol/format/XMLFeature.js";import RegularShape from"ol/style/RegularShape.js";import{OBJECT_PROPERTY_NODE_FACTORY,XML_SCHEMA_INSTANCE_URI,createElementNS,getAllTextContent,isDocument,makeArrayExtender,makeArrayPusher,makeChildAppender,makeObjectPropertySetter,makeReplacer,makeSequence,makeSimpleNodeFactory,makeStructureNS,parse,parseNode,pushParseAndPop,pushSerializeAndPop,getDocument}from"ol/xml.js";import{asArray}from"ol/color.js";import{extend}from"ol/array.js";import{get as getProjection}from"ol/proj.js";import{readBoolean,readDecimal,readString,writeBooleanTextNode,writeCDATASection,writeDecimalTextNode,writeStringTextNode}from"ol/format/xsd.js";import{toRadians}from"ol/math.js";import{transformGeometryWithOptions}from"ol/format/Feature.js";import Consts from"../../../TC/Consts.js";const GX_NAMESPACE_URIS=["http://www.google.com/kml/ext/2.2"];let NAMESPACE_URIS=[null,"http://earth.google.com/kml/2.0","http://earth.google.com/kml/2.1","http://earth.google.com/kml/2.2","http://www.opengis.net/kml/2.2"];const getAllCombinations=function(e){for(var t=[],r=[],n=Math.pow(2,e.length),o=0;o<n;o++){r=[];for(var a=0;a<e.length;a++)o&Math.pow(2,a)&&-1==r.indexOf(e[a])&&r.push(e[a]);r.length>0&&-1==t.indexOf(r.join(" "))&&t.push(r.join(" "))}return t},cleanCombinationsByFormat=function(e,t){if(e&&e.length>0)for(var r=0;r<t.length;r++){var n=e.indexOf(t[r]);n>-1&&e.splice(n,1)}},CUSTOM_NAMESPACE_URIS=getAllCombinations(NAMESPACE_URIS.slice().slice(1));cleanCombinationsByFormat(CUSTOM_NAMESPACE_URIS,NAMESPACE_URIS),NAMESPACE_URIS=NAMESPACE_URIS.concat(CUSTOM_NAMESPACE_URIS);const SCHEMA_LOCATION="http://www.opengis.net/kml/2.2 https://developers.google.com/kml/schema/kml22gx.xsd",ICON_ANCHOR_UNITS_MAP={fraction:"fraction",pixels:"pixels",insetPixels:"pixels"},PLACEMARK_PARSERS=makeStructureNS(NAMESPACE_URIS,{ExtendedData:extendedDataParser,Region:regionParser,MultiGeometry:makeObjectPropertySetter(readMultiGeometry,"geometry"),LineString:makeObjectPropertySetter(readLineString,"geometry"),LinearRing:makeObjectPropertySetter(readLinearRing,"geometry"),Point:makeObjectPropertySetter(readPoint,"geometry"),Polygon:makeObjectPropertySetter(readPolygon,"geometry"),Style:makeObjectPropertySetter(readStyle),StyleMap:placemarkStyleMapParser,Schema:makeObjectPropertySetter(readSchema),schemaUrl:makeObjectPropertySetter(readStyleURL),address:makeObjectPropertySetter(readString),description:makeObjectPropertySetter(readString),name:makeObjectPropertySetter(readString),open:makeObjectPropertySetter(readBoolean),phoneNumber:makeObjectPropertySetter(readString),styleUrl:makeObjectPropertySetter(readStyleURL),visibility:makeObjectPropertySetter(readBoolean)},makeStructureNS(GX_NAMESPACE_URIS,{MultiTrack:makeObjectPropertySetter(readGxMultiTrack,"geometry"),Track:makeObjectPropertySetter(readGxTrack,"geometry")})),NETWORK_LINK_PARSERS=makeStructureNS(NAMESPACE_URIS,{ExtendedData:extendedDataParser,Region:regionParser,Link:linkParser,address:makeObjectPropertySetter(readString),description:makeObjectPropertySetter(readString),name:makeObjectPropertySetter(readString),open:makeObjectPropertySetter(readBoolean),phoneNumber:makeObjectPropertySetter(readString),visibility:makeObjectPropertySetter(readBoolean)}),LINK_PARSERS=makeStructureNS(NAMESPACE_URIS,{href:makeObjectPropertySetter(readURI)}),CAMERA_PARSERS=makeStructureNS(NAMESPACE_URIS,{Altitude:makeObjectPropertySetter(readDecimal),Longitude:makeObjectPropertySetter(readDecimal),Latitude:makeObjectPropertySetter(readDecimal),Tilt:makeObjectPropertySetter(readDecimal),AltitudeMode:makeObjectPropertySetter(readString),Heading:makeObjectPropertySetter(readDecimal),Roll:makeObjectPropertySetter(readDecimal)}),REGION_PARSERS=makeStructureNS(NAMESPACE_URIS,{LatLonAltBox:latLonAltBoxParser,Lod:lodParser}),KML_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["Document","Schema","Placemark"]),KML_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{Document:makeChildAppender(writeDocument),Placemark:makeChildAppender(writePlacemark)});let DEFAULT_COLOR,DEFAULT_IMAGE_STYLE_ANCHOR,DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,DEFAULT_IMAGE_STYLE_SIZE,DEFAULT_IMAGE_STYLE_SRC,DEFAULT_FILL_STYLE=null;export function getDefaultFillStyle(){return DEFAULT_FILL_STYLE}let DEFAULT_NO_IMAGE_STYLE,DEFAULT_IMAGE_STYLE=null;export function getDefaultImageStyle(){return DEFAULT_IMAGE_STYLE}let DEFAULT_TEXT_STROKE_STYLE,DEFAULT_STROKE_STYLE=null;export function getDefaultStrokeStyle(){return DEFAULT_STROKE_STYLE}let DEFAULT_TEXT_STYLE=null;export function getDefaultTextStyle(){return DEFAULT_TEXT_STYLE}let DEFAULT_STYLE=null;export function getDefaultStyle(){return DEFAULT_STYLE}let DEFAULT_STYLE_ARRAY=null;export function getDefaultStyleArray(){return DEFAULT_STYLE_ARRAY}const getRGBA=function(e,t){var r;return e?(r=(r=asArray(e)).slice(),void 0!==t&&(r[3]=t)):r=[0,0,0,1],r};function scaleForSize(e){return 32/Math.min(e[0],e[1])}function createStyleDefaults(){DEFAULT_COLOR=[255,255,255,1],DEFAULT_FILL_STYLE=new Fill({color:getRGBA(TC.Cfg.styles.polygon.fillColor,TC.Cfg.styles.polygon.fillOpacity)}),DEFAULT_IMAGE_STYLE_ANCHOR=[20,2],DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS="pixels",DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS="pixels",DEFAULT_IMAGE_STYLE_SIZE=[64,64],DEFAULT_IMAGE_STYLE_SRC="https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png",DEFAULT_IMAGE_STYLE=new Icon({anchor:DEFAULT_IMAGE_STYLE_ANCHOR,anchorOrigin:"bottom-left",anchorXUnits:DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,anchorYUnits:DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,crossOrigin:"anonymous",rotation:0,scale:scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),size:DEFAULT_IMAGE_STYLE_SIZE,src:DEFAULT_IMAGE_STYLE_SRC}),DEFAULT_NO_IMAGE_STYLE="NO_IMAGE",DEFAULT_STROKE_STYLE=new Stroke({color:DEFAULT_COLOR,width:1}),DEFAULT_TEXT_STROKE_STYLE=new Stroke({color:getRGBA(TC.Cfg.styles.label.strokeColor,1),width:TC.Cfg.styles.label.strokeWidth||1}),DEFAULT_TEXT_STYLE=new Text({font:"bold 16px Helvetica",fill:new Fill({color:getRGBA(TC.Cfg.styles.label.fillColor,1)}),stroke:DEFAULT_TEXT_STROKE_STYLE,scale:.8}),DEFAULT_STYLE=new Style({fill:DEFAULT_FILL_STYLE,image:DEFAULT_IMAGE_STYLE,text:DEFAULT_TEXT_STYLE,stroke:DEFAULT_STROKE_STYLE,zIndex:0}),DEFAULT_STYLE_ARRAY=[DEFAULT_STYLE]}const featureSchemaUrls=new WeakMap,schemaUrlPropertyName="_schemaUrl",DATA_IMAGE_SVG_PREFIX="data:image/svg+xml;base64,",getNativeFeatureStyle=function(e,t){var r=e.getStyle();return"function"==typeof r&&(r=r(e)),Array.isArray(r)&&(r=r.reduce((function(e,t){return e.fill_=t.fill_||e.fill_,e.image_=t.image_||e.image_,e.stroke_=t.stroke_||e.stroke_,e.text_=t.text_||e.text_,e}),new Style)),r||t||(r=new Style,e.setStyle(r)),r},schemasAreEqual=function(e,t){if(e.length===t.length){for(let r=0;r<e.length;r++)if(e[r].name!==t[r].name||e[r].type!==t[r].type)return!1;return!0}return!1},replaceSpecialCharacters=function(e){var t=new Map([["ä","a"],["ö","o"],["ü","u"],["Ä","A"],["Ö","O"],["Ü","U"],["á","a"],["é","e"],["í","i"],["ó","o"],["ú","u"],["Á","A"],["É","E"],["Í","I"],["Ó","O"],["Ú","U"],["ñ","n"],["Ñ","N"],["ç","c"],["Ç","C"]]);return e.replace(/[öäüÖÄÜáéíóúÁÉÍÓÚñÑçÇ]/g,(e=>t.get(e)))},toNCName=function(e){return(e=(e=replaceSpecialCharacters(e)).replace(/^[^A-Za-z_]+/,"")).replace(/[^A-Za-z0-9_.-]/g,"_")},getFeatureSchemaAttribute=function(e){const t={name:e.name};switch(e.type){case Consts.dataType.INTEGER:t.type="int";break;case Consts.dataType.SMALLINT:t.type="short";break;case Consts.dataType.FLOAT:t.type="float";break;case Consts.dataType.DOUBLE:t.type="double";break;case Consts.dataType.BOOLEAN:t.type="bool";break;default:t.type="string"}return t},fillSharedSchemas=async function(e){const t=new Map,r=new Map;for(let n of e){let e=await(n._wrap.parent.layer?.getFeatureTypeMetadata());if(e){"function"==typeof e&&(e=e(n._wrap.parent));const o=JSON.stringify(e.attributes.map(getFeatureSchemaAttribute));let a;r.set(o,e.name),t.has(o)?a=t.get(o):(a=[],t.set(o,a)),a.push(n)}}for(let[e,n]of t.entries()){const t=n.find((e=>featureSchemaUrls.has(e)));let o,a,i=JSON.parse(e);if(t)o=featureSchemaUrls.get(t),a=o.substr(1);else{const t=n[0];a=toNCName(r.get(e)??t._wrap.parent.layer?.title??t._wrap.parent.layer?.id),o="#"+a}let l=this.sharedSchemas_[a];if(l)for(;l&&!schemasAreEqual(i,l);){let e=2;const t=/\.(\d+)$/,r=a.replace(t,"");r!==a&&(e=parseInt(t.exec(a)[1],10)+1),a=r+"."+e,o="#"+a,l=this.sharedSchemas_[a]}this.sharedSchemas_[a]=i;for(let e of n)featureSchemaUrls.set(e,o)}},getStyleProcessedFeature=function(e){const t=e.getGeometry();if(t instanceof Point){let r=getNativeFeatureStyle(e,!0);const n=r.getImage();if(n instanceof RegularShape){const o=n.getRadius(),a=n.getStroke();let i=a.getColor();Array.isArray(i)&&(i=toString(i));const l=a.getWidth();let s=n.getFill().getColor();Array.isArray(s)&&(s=toString(s));const S=2*o+l,c=document.createElement("canvas");c.width=S,c.height=S;const E=r.getText();r=r.clone(),r.setText();const d=new Feature(t);return d._wrap=e._wrap,d.setId(e.getId()),d.setProperties(e.getProperties()),featureSchemaUrls.set(d,featureSchemaUrls.get(e)),d.setStyle(new Style({image:new Icon({src:DATA_IMAGE_SVG_PREFIX+window.btoa(`<svg xmlns="http://www.w3.org/2000/svg" width="${S}" height="${S}">\n<circle cx="${S/2}" cy="${S/2}" r="${o}" stroke="${i}" fill="${s}" stroke-width="${l}" />\n</svg>`),size:[S,S],imgSize:[S,S],scale:n.getScale()}),text:E})),d}}return e},addPointFeaturesForLabels=function(e){const t=[];return e.forEach((function(e){const r=getNativeFeatureStyle(e,!0),n=e.getGeometry(),o=r.getText();var a;if(o&&o.getText()){switch(!0){case n instanceof LineString:a=new Point(n.getCoordinateAt(.5));break;case n instanceof Polygon:a=n.getInteriorPoint();break;case n instanceof MultiLineString:{const e=n.getLineStrings();var i=-1;a=new Point(e[e.map((function(e){return e.getLength()})).reduce((function(e,t,r){return t>i?(i=t,r):e}),-1)].getCoordinateAt(.5));break}case n instanceof MultiPolygon:{const e=n.getPolygons();var l=-1;a=e[e.map((function(e){return e.getArea()})).reduce((function(e,t,r){return t>l?(l=t,r):e}),-1)].getInteriorPoint();break}}if(a){const e=new Feature(a);e.setStyle(new Style({text:o.clone(),image:new Icon({crossOrigin:"anonymous",src:TC.apiLocation+"css/img/transparent.gif"})})),t.push(e)}}})),t.length&&(e=e.concat(t)),e};let TEXTAREA;function defaultIconUrlFunction(e){return e}class KML extends XMLFeature{constructor(e){super(),e=e||{},DEFAULT_STYLE_ARRAY||createStyleDefaults(),this.dataProjection=getProjection("EPSG:4326"),this.defaultStyle_=e.defaultStyle?e.defaultStyle:DEFAULT_STYLE_ARRAY,this.extractStyles_=void 0===e.extractStyles||e.extractStyles,this.writeStyles_=void 0===e.writeStyles||e.writeStyles,this.sharedStyles_={},this.sharedSchemas_={},this.showPointNames_=void 0===e.showPointNames||e.showPointNames,this.crossOrigin_=void 0!==e.crossOrigin?e.crossOrigin:"anonymous",this.iconUrlFunction_=e.iconUrlFunction?e.iconUrlFunction:defaultIconUrlFunction,this.supportedMediaTypes=["application/vnd.google-earth.kml+xml"]}readDocumentOrFolder_(e,t){const r=makeStructureNS(NAMESPACE_URIS,{Document:makeArrayExtender(this.readDocumentOrFolder_,this),Folder:makeArrayExtender(this.readDocumentOrFolder_,this),Placemark:makeArrayPusher(this.readPlacemark_,this),Style:this.readSharedStyle_.bind(this),StyleMap:this.readSharedStyleMap_.bind(this),Schema:this.readSharedSchema_.bind(this)}),n=pushParseAndPop([],r,e,t,this);if(n){const t=e.getElementsByTagName("name")[0];let r=t&&(t.innerHTML||t.textContent);return n.forEach((e=>{Array.isArray(e._folders)||(e._folders=[]),r&&e._folders.unshift(r)})),n.forEach((e=>{const t=featureSchemaUrls.get(e);if(t){const r=this.sharedSchemas_[t.substring(t.indexOf("#")+1)],n=e.getProperties();for(let t in n){const o=r.find((e=>e.name===t));if(o){const r=n[t];switch(o.type){case"int":case"uint":case"short":case"ushort":case"float":case"double":n[t]=""===r||null===r?null:parseFloat(r);break;case"bool":n[t]="true"===r}e.setProperties(n)}}}})),n}}readPlacemark_(e,t){const r=pushParseAndPop({geometry:null},PLACEMARK_PARSERS,e,t,this);if(!r)return;const n=new Feature,o=e.getAttribute("id");null!==o&&n.setId(o);const a=t[0],i=r.geometry;if(i&&transformGeometryWithOptions(i,!1,a),n.setGeometry(i),delete r.geometry,this.extractStyles_){const e=createFeatureStyleFunction(r.Style,r.styleUrl,this.defaultStyle_,this.sharedStyles_,this.showPointNames_);n.setStyle(e)}return delete r.Style,delete r.styleUrl,featureSchemaUrls.set(n,r._schemaUrl),delete r._schemaUrl,n.setProperties(r,!0),n}readSharedStyle_(e,t){const r=e.getAttribute("id");if(null!==r){const n=readStyle.call(this,e,t);if(n){let t,o=e.baseURI;o&&"about:blank"!=o||(o=window.location.href),t=o?new URL("#"+r,o).href:"#"+r,this.sharedStyles_[t]=n}}}readSharedStyleMap_(e,t){const r=e.getAttribute("id");if(null===r)return;const n=readStyleMapValue.call(this,e,t);if(!n)return;let o,a=e.baseURI;a&&"about:blank"!=a||(a=window.location.href),o=a?new URL("#"+r,a).href:"#"+r,this.sharedStyles_[o]=n}readSharedSchema_(e,t){const r=e.getAttribute("id");if(null!==r){const n=readSchema.call(this,e,t);n&&(this.sharedSchemas_[r]=n)}}async readFeatures(e,t){const r=await super.readFeatures(e,t);return this.sharedSchemas_={},r}readFeatureFromNode(e,t){if(!NAMESPACE_URIS.includes(e.namespaceURI))return null;return this.readPlacemark_(e,[this.getReadOptions(e,t)])||null}readFeaturesFromNode(e,t){if(!NAMESPACE_URIS.includes(e.namespaceURI))return[];let r;const n=e.localName;if("Document"==n||"Folder"==n){if(r=this.readDocumentOrFolder_(e,[this.getReadOptions(e,t)]),r){if("Document"===n){let e;for(let t in this.sharedSchemas_){const r=this.sharedSchemas_[t];e??={origin:Consts.format.KML,originalMetadata:{schemas:[]}};const n={id:t,simpleFields:r.map((e=>({...e})))};e.originalMetadata.schemas.push(n)}r.forEach((t=>{this.featureMetadata.set(t,e)}))}return r}return[]}if("Placemark"==n){const r=this.readPlacemark_(e,[this.getReadOptions(e,t)]);return r?[r]:[]}if("kml"==n){r=[];for(let n=e.firstElementChild;n;n=n.nextElementSibling){const e=this.readFeaturesFromNode(n,t);e&&extend(r,e)}return r.forEach((function(e){e.getId()||e.setId(TC.getUID())})),r}return[]}readName(e){if(e){if("string"==typeof e){const t=parse(e);return this.readNameFromDocument(t)}return isDocument(e)?this.readNameFromDocument(e):this.readNameFromNode(e)}}readNameFromDocument(e){for(let t=e.firstChild;t;t=t.nextSibling)if(t.nodeType==Node.ELEMENT_NODE){const e=this.readNameFromNode(t);if(e)return e}}readNameFromNode(e){for(let t=e.firstElementChild;t;t=t.nextElementSibling)if(NAMESPACE_URIS.includes(t.namespaceURI)&&"name"==t.localName)return readString(t);for(let t=e.firstElementChild;t;t=t.nextElementSibling){const e=t.localName;if(NAMESPACE_URIS.includes(t.namespaceURI)&&("Document"==e||"Folder"==e||"Placemark"==e||"kml"==e)){const e=this.readNameFromNode(t);if(e)return e}}}readNetworkLinks(e){const t=[];if("string"==typeof e){const r=parse(e);extend(t,this.readNetworkLinksFromDocument(r))}else isDocument(e)?extend(t,this.readNetworkLinksFromDocument(e)):extend(t,this.readNetworkLinksFromNode(e));return t}readNetworkLinksFromDocument(e){const t=[];for(let r=e.firstChild;r;r=r.nextSibling)r.nodeType==Node.ELEMENT_NODE&&extend(t,this.readNetworkLinksFromNode(r));return t}readNetworkLinksFromNode(e){const t=[];for(let r=e.firstElementChild;r;r=r.nextElementSibling)if(NAMESPACE_URIS.includes(r.namespaceURI)&&"NetworkLink"==r.localName){const e=pushParseAndPop({},NETWORK_LINK_PARSERS,r,[]);t.push(e)}for(let r=e.firstElementChild;r;r=r.nextElementSibling){const e=r.localName;!NAMESPACE_URIS.includes(r.namespaceURI)||"Document"!=e&&"Folder"!=e&&"kml"!=e||extend(t,this.readNetworkLinksFromNode(r))}return t}readRegion(e){const t=[];if("string"==typeof e){const r=parse(e);extend(t,this.readRegionFromDocument(r))}else isDocument(e)?extend(t,this.readRegionFromDocument(e)):extend(t,this.readRegionFromNode(e));return t}readRegionFromDocument(e){const t=[];for(let r=e.firstChild;r;r=r.nextSibling)r.nodeType==Node.ELEMENT_NODE&&extend(t,this.readRegionFromNode(r));return t}readRegionFromNode(e){const t=[];for(let r=e.firstElementChild;r;r=r.nextElementSibling)if(NAMESPACE_URIS.includes(r.namespaceURI)&&"Region"==r.localName){const e=pushParseAndPop({},REGION_PARSERS,r,[]);t.push(e)}for(let r=e.firstElementChild;r;r=r.nextElementSibling){const e=r.localName;!NAMESPACE_URIS.includes(r.namespaceURI)||"Document"!=e&&"Folder"!=e&&"kml"!=e||extend(t,this.readRegionFromNode(r))}return t}readCamera(e){const t=[];if("string"==typeof e){const r=parse(e);extend(t,this.readCameraFromDocument(r))}else isDocument(e)?extend(t,this.readCameraFromDocument(e)):extend(t,this.readCameraFromNode(e));return t}readCameraFromDocument(e){const t=[];for(let r=e.firstChild;r;r=r.nextSibling)r.nodeType===Node.ELEMENT_NODE&&extend(t,this.readCameraFromNode(r));return t}readCameraFromNode(e){const t=[];for(let r=e.firstElementChild;r;r=r.nextElementSibling)if(NAMESPACE_URIS.includes(r.namespaceURI)&&"Camera"===r.localName){const e=pushParseAndPop({},CAMERA_PARSERS,r,[]);t.push(e)}for(let r=e.firstElementChild;r;r=r.nextElementSibling){const e=r.localName;!NAMESPACE_URIS.includes(r.namespaceURI)||"Document"!==e&&"Folder"!==e&&"Placemark"!==e&&"kml"!==e||extend(t,this.readCameraFromNode(r))}return t}writeFeaturesNode(e,t){t=this.adaptOptions(t);const r=createElementNS(NAMESPACE_URIS[4],"kml"),n="http://www.w3.org/2000/xmlns/";r.setAttributeNS(n,"xmlns:gx",GX_NAMESPACE_URIS[0]),r.setAttributeNS(n,"xmlns:xsi",XML_SCHEMA_INSTANCE_URI),r.setAttributeNS(XML_SCHEMA_INSTANCE_URI,"xsi:schemaLocation",SCHEMA_LOCATION);const o={node:r},a={};e=e.map(getStyleProcessedFeature),e=addPointFeaturesForLabels(e);const i=[];let l=[];const s=function(e,t,r){if(r>=t._folders.length)e.push(t);else{let n=e.find((e=>e._name===t._folders[r]));n||(n=[],n._name=t._folders[r],e.push(n)),s(n,t,r+1)}};e.forEach((function(e){e._folders?.length?s(l,e,0):i.push(e)})),1===l.length&&(l=l[0]);const S=l._name;Array.isArray(l)||(l=[l]),l=l.concat(i),l._name=S,a.Document=l;const c=KML_SEQUENCE[r.namespaceURI],E=makeSequence(a,c);return pushSerializeAndPop(o,KML_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,E,[t],c,this),r}async writeFeatures(e,t={}){await fillSharedSchemas.call(this,e);const r=await super.writeFeatures(e,t);return this.sharedSchemas_={},r}getFeatureTypeMetadata(e,t){const r=function(t){const r={...e},n=t.wrap?.feature||t,o=featureSchemaUrls.get(n);if(o){const t=e.originalMetadata.schemas,a=t.find((e=>"#"+e.id===o))??t[0];a&&(r.attributes=a.simpleFields.map((e=>{const t={name:e.name,originalType:e.type,optional:!0};switch(e.type){case"int":case"uint":t.type=Consts.dataType.INTEGER;break;case"short":case"ushort":t.type=Consts.dataType.SMALLINT;break;case"float":t.type=Consts.dataType.FLOAT;break;case"double":t.type=Consts.dataType.DOUBLE;break;case"bool":t.type=Consts.dataType.BOOLEAN;break;default:t.type=Consts.dataType.STRING}return t})),n.unset("_schemaUrl"))}return r};if(t.length){const e=t[0],n=featureSchemaUrls.get(e);if(t.every((e=>featureSchemaUrls.get(e)===n)))return r(e)}return r}groupFeatures(e,t){const r=e.reduce(((e,r)=>{var n=r._folders?.length?r._folders.join(" › "):null;return n||(n=t(r)),e[n]??=[],e[n].push(r),e}),{}),n={};for(let e in r){const t=r[e],o=t.reduce(((e,t)=>{const r=featureSchemaUrls.get(t);if(r){const n=r.substring(r.indexOf("#")+1);e[n]??=[],e[n].push(t)}return e}),{});if(Object.keys(o).length>1)for(let t in o){let a;a=r.length>1?e+" › "+t:t,n[a]=o[t]}else n[e]=t}return n}}function createNameStyleFunction(e,t){DEFAULT_TEXT_STYLE||createStyleDefaults();const r=[0,0];let n="start";const o=e.getImage();if(o){const e=o.getSize();if(e&&2==e.length){const t=o.getScaleArray(),a=o.getAnchor();r[0]=t[0]*(e[0]-a[0]),r[1]=t[1]*(e[1]/2-a[1]),n="left"}}let a=e.getText();a?(a=a.clone(),a.setFont(a.getFont()||DEFAULT_TEXT_STYLE.getFont()),a.setScale(a.getScale()||DEFAULT_TEXT_STYLE.getScale()),a.setFill(a.getFill()||DEFAULT_TEXT_STYLE.getFill()),a.setStroke(a.getStroke()||DEFAULT_TEXT_STROKE_STYLE)):a=DEFAULT_TEXT_STYLE.clone(),a.setText(t),a.setOffsetX(r[0]),a.setOffsetY(r[1]),a.setTextAlign(n);const i=new Style({image:o,text:a});return e._balloon&&(i._balloon=e._balloon),i}function createFeatureStyleFunction(e,t,r,n,o){return function(a,i){let l=o,s="",S=[];if(l){const e=a.getGeometry();if(e)if(e instanceof GeometryCollection)S=e.getGeometriesArrayRecursive().filter((function(e){const t=e.getType();return"Point"===t||"MultiPoint"===t})),l=S.length>0;else{const t=e.getType();l="Point"===t||"MultiPoint"===t}}l&&(s=a.get("name"),l=l&&!!s,l&&/&[^&]+;/.test(s)&&(TEXTAREA||(TEXTAREA=document.createElement("textarea")),TEXTAREA.innerHTML=s,s=TEXTAREA.value));let c=r;if(e?c=e:t&&(c=findStyle(t,r,n)),l){const e=createNameStyleFunction(c[0],s);return S.length>0?(e.setGeometry(new GeometryCollection(S)),[e,new Style({geometry:c[0].getGeometry(),image:null,fill:c[0].getFill(),stroke:c[0].getStroke(),text:null})].concat(c.slice(1))):e}return c}}function findStyle(e,t,r){return Array.isArray(e)?e:"string"==typeof e?findStyle(r[e],t,r):t}function readColor(e){const t=getAllTextContent(e,!1),r=/^\s*#?\s*([0-9A-Fa-f]{8})\s*$/.exec(t);if(r){const e=r[1];return[parseInt(e.substr(6,2),16),parseInt(e.substr(4,2),16),parseInt(e.substr(2,2),16),parseInt(e.substr(0,2),16)/255]}}export function readFlatCoordinates(e){let t=getAllTextContent(e,!1);const r=[];t=t.replace(/\s*,\s*/g,",");const n=/^\s*([+\-]?\d*\.?\d+(?:e[+\-]?\d+)?),([+\-]?\d*\.?\d+(?:e[+\-]?\d+)?)(?:\s+|,|$)(?:([+\-]?\d*\.?\d+(?:e[+\-]?\d+)?)(?:\s+|$))?\s*/i;let o;for(;o=n.exec(t);){const e=parseFloat(o[1]),n=parseFloat(o[2]),a=o[3]?parseFloat(o[3]):0;r.push(e,n,a),t=t.substr(o[0].length)}if(""===t)return r}function readURI(e){const t=getAllTextContent(e,!1).trim();let r=e.baseURI;return r&&"about:blank"!=r||(r=window.location.href),r?("https:"===location.protocol&&0===r.indexOf("http://")&&(r=r.substr(5)),new URL(t,r).href):t}function readStyleURL(e){const t=getAllTextContent(e,!1).trim().replace(/^(?!.*#)/,"#");let r=e.baseURI;return r&&"about:blank"!=r||(r=window.location.href),r?new URL(t,r).href:t}function readVec2(e){const t=e.getAttribute("xunits"),r=e.getAttribute("yunits");let n;return n="insetPixels"!==t?"insetPixels"!==r?"bottom-left":"top-left":"insetPixels"!==r?"bottom-right":"top-right",{x:parseFloat(e.getAttribute("x")),xunits:ICON_ANCHOR_UNITS_MAP[t],y:parseFloat(e.getAttribute("y")),yunits:ICON_ANCHOR_UNITS_MAP[r],origin:n}}function readScale(e){return readDecimal(e)}const STYLE_MAP_PARSERS=makeStructureNS(NAMESPACE_URIS,{Pair:pairDataParser});function readStyleMapValue(e,t){return pushParseAndPop(void 0,STYLE_MAP_PARSERS,e,t,this)}const ICON_STYLE_PARSERS=makeStructureNS(NAMESPACE_URIS,{Icon:makeObjectPropertySetter(readIcon),color:makeObjectPropertySetter(readColor),heading:makeObjectPropertySetter(readDecimal),hotSpot:makeObjectPropertySetter(readVec2),scale:makeObjectPropertySetter(readScale)}),readText=function(e,t){return ol.asserts.assert(e.nodeType==Node.ELEMENT_NODE),ol.asserts.assert("text"==e.localName),readString(e).trim()},balloonStyleParser=function(e,t){ol.asserts.assert(e.nodeType==Node.ELEMENT_NODE),ol.asserts.assert("BalloonStyle"==e.localName);var r=ol.xml.pushParseAndPop({},BALLOON_STYLE_PARSERS,e,t);if(!r)return;const n=t[t.length-1],o=typeof n;ol.asserts.assert("object"==o&&null!=n||"function"==o);var a=new Text({text:r.text});n.balloonStyle=a},BALLOON_STYLE_PARSERS=makeStructureNS(NAMESPACE_URIS,{text:makeObjectPropertySetter(readText)});function iconStyleParser(e,t){const r=pushParseAndPop({},ICON_STYLE_PARSERS,e,t);if(!r)return;const n=t[t.length-1],o="Icon"in r?r.Icon:{},a=!("Icon"in r)||Object.keys(o).length>0;let i;const l=o.href;let s,S,c;l?i=l:a&&(i=DEFAULT_IMAGE_STYLE_SRC);let E="bottom-left";const d=r.hotSpot;let m;d?(s=[d.x,d.y],S=d.xunits,c=d.yunits,E=d.origin):/^https?:\/\/maps\.(?:google|gstatic)\.com\//.test(i)&&(i.includes("pushpin")?(s=DEFAULT_IMAGE_STYLE_ANCHOR,S=DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,c=DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS):i.includes("arrow-reverse")?(s=[54,42],S=DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,c=DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS):i.includes("paddle")&&(s=[32,1],S=DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,c=DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS)),a&&/Firefox/.test(navigator.userAgent)&&"https:"===location.protocol&&i.startsWith("http:")&&(i=i.replace("http:","https:"));const u=o.x,A=o.y;let _;void 0!==u&&void 0!==A&&(m=[u,A]);const p=o.w,R=o.h;let y;void 0!==p&&void 0!==R&&(_=[p,R]);const h=r.heading;void 0!==h&&(y=toRadians(h));const g=r.scale,N=r.color;if(a){i==DEFAULT_IMAGE_STYLE_SRC&&(_=DEFAULT_IMAGE_STYLE_SIZE);let e=new Icon({anchor:s,anchorOrigin:E,anchorXUnits:S,anchorYUnits:c,crossOrigin:this.crossOrigin_,offset:m,offsetOrigin:"bottom-left",rotation:y,scale:g,size:_,src:this.iconUrlFunction_(i),color:N});const t=e.getScaleArray()[0],r=e.getSize();if(null===r){const r=e.getImageState();if(r===ImageState.IDLE||r===ImageState.LOADING){const n=function(){const r=e.getImageState();if(r!==ImageState.IDLE&&r!==ImageState.LOADING){const r=e.getSize();if(r&&2==r.length){const n=scaleForSize(r);e.setScale(t*n)}e.unlistenImageChange(n)}};e.listenImageChange(n),r===ImageState.IDLE&&e.load()}}else if(2==r.length){const n=scaleForSize(r);e.setScale(t*n)}const o=/<circle cx="(?:\d+(?:\.\d+)?)" cy="(?:\d+(?:\.\d+)?)" r="(\d+(?:\.\d+)?)" stroke="([\w\d\.#(),]+)" fill="([\w\d\.#(),]+)" stroke-width="(\d+(?:\.\d+)?)" \/>/,a=e.getSrc();if(a.startsWith(DATA_IMAGE_SVG_PREFIX)){const t=window.atob(a.substring(26)).match(o);t&&(e=new Circle({radius:parseFloat(t[1]),stroke:new Stroke({color:t[2],width:parseFloat(t[4])}),fill:new Fill({color:t[3]})}))}n.imageStyle=e}else n.imageStyle=DEFAULT_NO_IMAGE_STYLE}const LABEL_STYLE_PARSERS=makeStructureNS(NAMESPACE_URIS,{color:makeObjectPropertySetter(readColor),scale:makeObjectPropertySetter(readScale)});function labelStyleParser(e,t){const r=pushParseAndPop({},LABEL_STYLE_PARSERS,e,t);if(!r)return;const n=t[t.length-1],o=new Text({fill:new Fill({color:"color"in r?r.color:DEFAULT_COLOR}),scale:r.scale});n.textStyle=o}const LINE_STYLE_PARSERS=makeStructureNS(NAMESPACE_URIS,{color:makeObjectPropertySetter(readColor),width:makeObjectPropertySetter(readDecimal)});function lineStyleParser(e,t){const r=pushParseAndPop({},LINE_STYLE_PARSERS,e,t);if(!r)return;const n=t[t.length-1],o=new Stroke({color:"color"in r?r.color:DEFAULT_COLOR,width:"width"in r?r.width:1});n.strokeStyle=o}const POLY_STYLE_PARSERS=makeStructureNS(NAMESPACE_URIS,{color:makeObjectPropertySetter(readColor),fill:makeObjectPropertySetter(readBoolean),outline:makeObjectPropertySetter(readBoolean)});function polyStyleParser(e,t){const r=pushParseAndPop({},POLY_STYLE_PARSERS,e,t);if(!r)return;const n=t[t.length-1],o=new Fill({color:"color"in r?r.color:DEFAULT_COLOR});n.fillStyle=o;const a=r.fill;void 0!==a&&(n.fill=a);const i=r.outline;void 0!==i&&(n.outline=i)}const FLAT_LINEAR_RING_PARSERS=makeStructureNS(NAMESPACE_URIS,{coordinates:makeReplacer(readFlatCoordinates)});function readFlatLinearRing(e,t){return pushParseAndPop(null,FLAT_LINEAR_RING_PARSERS,e,t)}function gxCoordParser(e,t){const r=t[t.length-1].coordinates,n=getAllTextContent(e,!1),o=/^\s*([+\-]?\d+(?:\.\d*)?(?:e[+\-]?\d*)?)\s+([+\-]?\d+(?:\.\d*)?(?:e[+\-]?\d*)?)\s+([+\-]?\d+(?:\.\d*)?(?:e[+\-]?\d*)?)\s*$/i.exec(n);if(o){const e=parseFloat(o[1]),t=parseFloat(o[2]),n=parseFloat(o[3]);r.push([e,t,n])}else r.push([])}const GX_MULTITRACK_GEOMETRY_PARSERS=makeStructureNS(GX_NAMESPACE_URIS,{Track:makeArrayPusher(readGxTrack)});function readGxMultiTrack(e,t){const r=pushParseAndPop([],GX_MULTITRACK_GEOMETRY_PARSERS,e,t);if(r)return new MultiLineString(r)}const GX_TRACK_PARSERS=makeStructureNS(NAMESPACE_URIS,{when:whenParser},makeStructureNS(GX_NAMESPACE_URIS,{coord:gxCoordParser}));function readGxTrack(e,t){const r=pushParseAndPop({coordinates:[],whens:[]},GX_TRACK_PARSERS,e,t);if(!r)return;const n=[],o=r.coordinates,a=r.whens;for(let e=0,t=Math.min(o.length,a.length);e<t;++e)3==o[e].length&&n.push(o[e][0],o[e][1],o[e][2],a[e]);return new LineString(n,"XYZM")}const ICON_PARSERS=makeStructureNS(NAMESPACE_URIS,{href:makeObjectPropertySetter(readURI)},makeStructureNS(GX_NAMESPACE_URIS,{x:makeObjectPropertySetter(readDecimal),y:makeObjectPropertySetter(readDecimal),w:makeObjectPropertySetter(readDecimal),h:makeObjectPropertySetter(readDecimal)}));function readIcon(e,t){return pushParseAndPop({},ICON_PARSERS,e,t)||null}const GEOMETRY_FLAT_COORDINATES_PARSERS=makeStructureNS(NAMESPACE_URIS,{coordinates:makeReplacer(readFlatCoordinates)});function readFlatCoordinatesFromNode(e,t){return pushParseAndPop(null,GEOMETRY_FLAT_COORDINATES_PARSERS,e,t)}const EXTRUDE_AND_ALTITUDE_MODE_PARSERS=makeStructureNS(NAMESPACE_URIS,{extrude:makeObjectPropertySetter(readBoolean),tessellate:makeObjectPropertySetter(readBoolean),altitudeMode:makeObjectPropertySetter(readString)});function readLineString(e,t){const r=pushParseAndPop({},EXTRUDE_AND_ALTITUDE_MODE_PARSERS,e,t),n=readFlatCoordinatesFromNode(e,t);if(n){const e=new LineString(n,"XYZ");return e.setProperties(r,!0),e}}function readLinearRing(e,t){const r=pushParseAndPop({},EXTRUDE_AND_ALTITUDE_MODE_PARSERS,e,t),n=readFlatCoordinatesFromNode(e,t);if(n){const e=new Polygon(n,"XYZ",[n.length]);return e.setProperties(r,!0),e}}const MULTI_GEOMETRY_PARSERS=makeStructureNS(NAMESPACE_URIS,{LineString:makeArrayPusher(readLineString),LinearRing:makeArrayPusher(readLinearRing),MultiGeometry:makeArrayPusher(readMultiGeometry),Point:makeArrayPusher(readPoint),Polygon:makeArrayPusher(readPolygon)});function readMultiGeometry(e,t){const r=pushParseAndPop([],MULTI_GEOMETRY_PARSERS,e,t);if(!r)return null;if(0===r.length)return new GeometryCollection(r);let n,o=!0;const a=r[0].getType();let i;for(let e=1,t=r.length;e<t;++e)if(i=r[e],i.getType()!=a){o=!1;break}if(o){let e,t;if("Point"==a){const o=r[0];e=o.getLayout(),t=o.getFlatCoordinates();for(let e=1,n=r.length;e<n;++e)i=r[e],extend(t,i.getFlatCoordinates());n=new MultiPoint(t,e),setCommonGeometryProperties(n,r)}else if("LineString"==a)n=new MultiLineString(r),setCommonGeometryProperties(n,r);else if("Polygon"==a)n=new MultiPolygon(r),setCommonGeometryProperties(n,r);else{if("GeometryCollection"!=a&&!a.startsWith("Multi"))throw new Error("Unknown geometry type found");n=new GeometryCollection(r)}}else n=new GeometryCollection(r);return n}function readPoint(e,t){const r=pushParseAndPop({},EXTRUDE_AND_ALTITUDE_MODE_PARSERS,e,t),n=readFlatCoordinatesFromNode(e,t);if(n){const e=new Point(n,"XYZ");return e.setProperties(r,!0),e}}const FLAT_LINEAR_RINGS_PARSERS=makeStructureNS(NAMESPACE_URIS,{innerBoundaryIs:innerBoundaryIsParser,outerBoundaryIs:outerBoundaryIsParser});function readPolygon(e,t){const r=pushParseAndPop({},EXTRUDE_AND_ALTITUDE_MODE_PARSERS,e,t),n=pushParseAndPop([null],FLAT_LINEAR_RINGS_PARSERS,e,t);if(n&&n[0]){const e=n[0],t=[e.length];for(let r=1,o=n.length;r<o;++r)extend(e,n[r]),t.push(e.length);const o=new Polygon(e,"XYZ",t);return o.setProperties(r,!0),o}}const STYLE_PARSERS=makeStructureNS(NAMESPACE_URIS,{IconStyle:iconStyleParser,LabelStyle:labelStyleParser,LineStyle:lineStyleParser,PolyStyle:polyStyleParser,BalloonStyle:balloonStyleParser});function readStyle(e,t){const r=pushParseAndPop({},STYLE_PARSERS,e,t,this);if(!r)return null;let n="fillStyle"in r?r.fillStyle:DEFAULT_FILL_STYLE;const o=r.fill;let a;void 0===o||o||(n=null),"imageStyle"in r?r.imageStyle!=DEFAULT_NO_IMAGE_STYLE&&(a=r.imageStyle):a=DEFAULT_IMAGE_STYLE;const i="textStyle"in r?r.textStyle:DEFAULT_TEXT_STYLE,l="strokeStyle"in r?r.strokeStyle:DEFAULT_STROKE_STYLE;let s;const S=r.outline;s=void 0===S||S?[new Style({fill:n,image:a,stroke:l,text:i,zIndex:void 0})]:[new Style({geometry:function(e){const t=e.getGeometry(),r=t.getType();return"GeometryCollection"===r?new GeometryCollection(t.getGeometriesArrayRecursive().filter((function(e){const t=e.getType();return"Polygon"!==t&&"MultiPolygon"!==t}))):"Polygon"!==r&&"MultiPolygon"!==r?t:void 0},fill:n,image:a,stroke:l,text:i,zIndex:void 0}),new Style({geometry:function(e){const t=e.getGeometry(),r=t.getType();return"GeometryCollection"===r?new GeometryCollection(t.getGeometriesArrayRecursive().filter((function(e){const t=e.getType();return"Polygon"===t||"MultiPolygon"===t}))):"Polygon"===r||"MultiPolygon"===r?t:void 0},fill:n,stroke:null,zIndex:void 0})];const c=r.balloonStyle;return c&&s.forEach((e=>e._balloon=c)),s}function setCommonGeometryProperties(e,t){const r=t.length,n=new Array(t.length),o=new Array(t.length),a=new Array(t.length);let i,l,s;i=!1,l=!1,s=!1;for(let e=0;e<r;++e){const r=t[e];n[e]=r.get("extrude"),o[e]=r.get("tessellate"),a[e]=r.get("altitudeMode"),i=i||void 0!==n[e],l=l||void 0!==o[e],s=s||a[e]}i&&e.set("extrude",n),l&&e.set("tessellate",o),s&&e.set("altitudeMode",a)}const DATA_PARSERS=makeStructureNS(NAMESPACE_URIS,{displayName:makeObjectPropertySetter(readString),value:makeObjectPropertySetter(readString)});function dataParser(e,t){const r=e.getAttribute("name");parseNode(DATA_PARSERS,e,t);const n=t[t.length-1];r&&n.displayName?(n[r]={value:n.value,displayName:n.displayName,toString:function(){return n.value}},delete n.displayName):null!==r?n[r]=n.value:null!==n.displayName&&(n[n.displayName]=n.value),delete n.value}const EXTENDED_DATA_PARSERS=makeStructureNS(NAMESPACE_URIS,{Data:dataParser,SchemaData:schemaDataParser});function extendedDataParser(e,t){parseNode(EXTENDED_DATA_PARSERS,e,t)}function regionParser(e,t){parseNode(REGION_PARSERS,e,t)}const PAIR_PARSERS=makeStructureNS(NAMESPACE_URIS,{Style:makeObjectPropertySetter(readStyle),key:makeObjectPropertySetter(readString),styleUrl:makeObjectPropertySetter(readStyleURL)});function pairDataParser(e,t){const r=pushParseAndPop({},PAIR_PARSERS,e,t,this);if(!r)return;const n=r.key;if(n&&"normal"==n){const e=r.styleUrl;e&&(t[t.length-1]=e);const n=r.Style;n&&(t[t.length-1]=n)}}function placemarkStyleMapParser(e,t){const r=readStyleMapValue.call(this,e,t);if(!r)return;const n=t[t.length-1];if(Array.isArray(r))n.Style=r;else{if("string"!=typeof r)throw new Error("`styleMapValue` has an unknown type");n.styleUrl=r}}const SCHEMA_DATA_PARSERS=makeStructureNS(NAMESPACE_URIS,{SimpleData:simpleDataParser});function schemaDataParser(e,t){const r=e.getAttribute("schemaUrl");null!==r&&(t[t.length-1]._schemaUrl=r),parseNode(SCHEMA_DATA_PARSERS,e,t)}function simpleDataParser(e,t){const r=e.getAttribute("name");if(null!==r){const n=readString(e);t[t.length-1][r]=n}}const SCHEMA_PARSERS=makeStructureNS(NAMESPACE_URIS,{SimpleField:makeArrayExtender(simpleFieldParser)}),SCHEMA_FIELD_PARSERS=makeStructureNS(NAMESPACE_URIS,{displayName:makeObjectPropertySetter(readString)});function simpleFieldParser(e,t){const r=pushParseAndPop({},SCHEMA_FIELD_PARSERS,e,t,this),n=e.getAttribute("name"),o=e.getAttribute("type");if(null!==n&&null!==o)return r.name=n,r.type=o,r}function readSchema(e,t){return pushParseAndPop([],SCHEMA_PARSERS,e,t,this)||null}const SCHEMA_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{SimpleField:makeChildAppender(writeSimpleFieldNode),displayName:makeChildAppender(writeDataNodeName)});function writeSimpleFieldNode(e,t,r){const n={node:e};e.setAttribute("name",t.name),e.setAttribute("type",t.type),t.displayName&&pushSerializeAndPop(n,SCHEMA_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,[t.displayName],r,["displayName"])}const LAT_LON_ALT_BOX_PARSERS=makeStructureNS(NAMESPACE_URIS,{altitudeMode:makeObjectPropertySetter(readString),minAltitude:makeObjectPropertySetter(readDecimal),maxAltitude:makeObjectPropertySetter(readDecimal),north:makeObjectPropertySetter(readDecimal),south:makeObjectPropertySetter(readDecimal),east:makeObjectPropertySetter(readDecimal),west:makeObjectPropertySetter(readDecimal)});function latLonAltBoxParser(e,t){const r=pushParseAndPop({},LAT_LON_ALT_BOX_PARSERS,e,t);if(!r)return;const n=t[t.length-1],o=[parseFloat(r.west),parseFloat(r.south),parseFloat(r.east),parseFloat(r.north)];n.extent=o,n.altitudeMode=r.altitudeMode,n.minAltitude=parseFloat(r.minAltitude),n.maxAltitude=parseFloat(r.maxAltitude)}const LOD_PARSERS=makeStructureNS(NAMESPACE_URIS,{minLodPixels:makeObjectPropertySetter(readDecimal),maxLodPixels:makeObjectPropertySetter(readDecimal),minFadeExtent:makeObjectPropertySetter(readDecimal),maxFadeExtent:makeObjectPropertySetter(readDecimal)});function lodParser(e,t){const r=pushParseAndPop({},LOD_PARSERS,e,t);if(!r)return;const n=t[t.length-1];n.minLodPixels=parseFloat(r.minLodPixels),n.maxLodPixels=parseFloat(r.maxLodPixels),n.minFadeExtent=parseFloat(r.minFadeExtent),n.maxFadeExtent=parseFloat(r.maxFadeExtent)}const INNER_BOUNDARY_IS_PARSERS=makeStructureNS(NAMESPACE_URIS,{LinearRing:makeArrayPusher(readFlatLinearRing)});function innerBoundaryIsParser(e,t){const r=pushParseAndPop([],INNER_BOUNDARY_IS_PARSERS,e,t);r.length>0&&t[t.length-1].push(...r)}const OUTER_BOUNDARY_IS_PARSERS=makeStructureNS(NAMESPACE_URIS,{LinearRing:makeReplacer(readFlatLinearRing)});function outerBoundaryIsParser(e,t){const r=pushParseAndPop(void 0,OUTER_BOUNDARY_IS_PARSERS,e,t);r&&(t[t.length-1][0]=r)}function linkParser(e,t){parseNode(LINK_PARSERS,e,t)}function whenParser(e,t){const r=t[t.length-1].whens,n=getAllTextContent(e,!1),o=Date.parse(n);r.push(isNaN(o)?0:o)}function writeColorTextNode(e,t){const r=asArray(t),n=[255*(4==r.length?r[3]:1),r[2],r[1],r[0]];for(let e=0;e<4;++e){const t=Math.floor(n[e]).toString(16);n[e]=1==t.length?"0"+t:t}writeStringTextNode(e,n.join(""))}function writeCoordinatesTextNode(e,t,r){const n=r[r.length-1],o=n.layout,a=n.stride;let i;if("XY"==o||"XYM"==o)i=2;else{if("XYZ"!=o&&"XYZM"!=o)throw new Error("Invalid geometry layout");i=3}const l=t.length;let s="";if(l>0){s+=t[0];for(let e=1;e<i;++e)s+=","+t[e];for(let e=a;e<l;e+=a){s+=" "+t[e];for(let r=1;r<i;++r)s+=","+t[e+r]}}writeStringTextNode(e,s)}const EXTENDEDDATA_NODE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{Data:makeChildAppender(writeDataNode),value:makeChildAppender(writeDataNodeValue),displayName:makeChildAppender(writeDataNodeName),SchemaData:makeChildAppender(writeSchemaDataNode),SimpleData:makeChildAppender(writeSimpleDataNode)});function writeDataNode(e,t,r){e.setAttribute("name",t.name);const n={node:e},o=t.value;"object"==typeof o?(null!==o&&o.displayName&&pushSerializeAndPop(n,EXTENDEDDATA_NODE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,[o.displayName],r,["displayName"]),null!==o&&o.value&&pushSerializeAndPop(n,EXTENDEDDATA_NODE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,[o.value],r,["value"])):pushSerializeAndPop(n,EXTENDEDDATA_NODE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,[o],r,["value"])}function writeDataNodeName(e,t){writeCDATASection(e,t)}function writeDataNodeValue(e,t){writeStringTextNode(e,t)}function writeSchemaDataNode(e,t,r){e.setAttribute("schemaUrl",t.schemaUrl);const n={node:e},o=t.schemaData.names,a=t.schemaData.values,i=o.length;for(let e=0;e<i;e++)pushSerializeAndPop(n,EXTENDEDDATA_NODE_SERIALIZERS,SIMPLE_DATA_NODE_FACTORY,[{name:o[e],value:a[e]}],r)}function writeSimpleDataNode(e,t,r){e.setAttribute("name",t.name),t.value??="",writeStringTextNode(e,t.value)}const DOCUMENT_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["name","Schema"]);var DOCUMENT_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{Placemark:makeChildAppender(writePlacemark),Document:makeChildAppender(writeDocument),Folder:makeChildAppender(writeDocument),name:makeChildAppender(writeStringTextNode),Schema:makeChildAppender(writeSchema)});const DOCUMENT_NODE_FACTORY=function(e,t,r){const n=t[t.length-1].node;return Array.isArray(e)?createElementNS(n.namespaceURI,"Folder"):createElementNS(n.namespaceURI,"string"==typeof e?"name":"Placemark")},SCHEMA_NODE_FACTORY=function(e,t,r){const n=t[t.length-1].node,o=createElementNS(n.namespaceURI,"Schema");return o.setAttribute("id",e.id),o.setAttribute("name",e.id),o},SIMPLE_FIELD_NODE_FACTORY=function(e,t,r){const n=t[t.length-1].node,o=createElementNS(n.namespaceURI,"SimpleField");return o.setAttribute("type",e.type),o.setAttribute("name",e.id),o};function writeDocument(e,t,r){const n={node:e};if(t._name){const e={name:t._name},o=r[r.length-1].node,a=DOCUMENT_SEQUENCE[o.namespaceURI],i=makeSequence(e,a);pushSerializeAndPop(n,DOCUMENT_SERIALIZERS,DOCUMENT_NODE_FACTORY,i,r,a)}if("Document"===e.localName)for(let e in this.sharedSchemas_)pushSerializeAndPop(n,DOCUMENT_SERIALIZERS,SCHEMA_NODE_FACTORY,[{id:e.substring(e.indexOf("#")+1),simpleFields:this.sharedSchemas_[e]}],r,void 0,this);pushSerializeAndPop(n,DOCUMENT_SERIALIZERS,DOCUMENT_NODE_FACTORY,t,r,void 0,this)}function writeSchema(e,t,r){const n={node:e};for(let e of t.simpleFields)pushSerializeAndPop(n,SCHEMA_SERIALIZERS,SIMPLE_FIELD_NODE_FACTORY,[{...e}],r)}const DATA_NODE_FACTORY=makeSimpleNodeFactory("Data"),SCHEMA_DATA_NODE_FACTORY=makeSimpleNodeFactory("SchemaData"),SIMPLE_DATA_NODE_FACTORY=makeSimpleNodeFactory("SimpleData");function writeExtendedData(e,t,r){const n={node:e},o=t.names,a=t.values,i=o.length;if(t.schemaUrl)pushSerializeAndPop(n,EXTENDEDDATA_NODE_SERIALIZERS,SCHEMA_DATA_NODE_FACTORY,[{schemaUrl:t.schemaUrl,schemaData:{names:o,values:a}}],r);else for(let e=0;e<i;e++)pushSerializeAndPop(n,EXTENDEDDATA_NODE_SERIALIZERS,DATA_NODE_FACTORY,[{name:o[e],value:a[e]}],r)}const ICON_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["href"],makeStructureNS(GX_NAMESPACE_URIS,["x","y","w","h"])),ICON_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{href:makeChildAppender(writeStringTextNode)},makeStructureNS(GX_NAMESPACE_URIS,{x:makeChildAppender(writeDecimalTextNode),y:makeChildAppender(writeDecimalTextNode),w:makeChildAppender(writeDecimalTextNode),h:makeChildAppender(writeDecimalTextNode)})),GX_NODE_FACTORY=function(e,t,r){return createElementNS(GX_NAMESPACE_URIS[0],"gx:"+r)};function writeIcon(e,t,r){const n={node:e},o=r[r.length-1].node;let a=ICON_SEQUENCE[o.namespaceURI],i=makeSequence(t,a);pushSerializeAndPop(n,ICON_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,i,r,a),a=ICON_SEQUENCE[GX_NAMESPACE_URIS[0]],i=makeSequence(t,a),pushSerializeAndPop(n,ICON_SERIALIZERS,GX_NODE_FACTORY,i,r,a)}const ICON_STYLE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["scale","heading","Icon","color","hotSpot"]),ICON_STYLE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{Icon:makeChildAppender(writeIcon),color:makeChildAppender(writeColorTextNode),heading:makeChildAppender(writeDecimalTextNode),hotSpot:makeChildAppender(writeVec2),scale:makeChildAppender(writeScaleTextNode)});function writeIconStyle(e,t,r){const n={node:e},o={},a=t.getSrc(),i=t.getSize(),l=t.getImageSize(),s={href:a};if(i){s.w=i[0],s.h=i[1];const e=t.getAnchor(),r=t.getOrigin();if(r&&l&&0!==r[0]&&r[1]!==i[1]&&(s.x=r[0],s.y=l[1]-(r[1]+i[1])),e&&(e[0]!==i[0]/2||e[1]!==i[1]/2)){const t={x:e[0],xunits:"pixels",y:i[1]-e[1],yunits:"pixels"};o.hotSpot=t}}o.Icon=s;let S=t.getScaleArray()[0],c=i;null===c&&(DEFAULT_IMAGE_STYLE_SIZE||createStyleDefaults(),c=DEFAULT_IMAGE_STYLE_SIZE),2==c.length&&(S/=scaleForSize(c)),1!==S&&(o.scale=S);const E=t.getRotation();0!==E&&(o.heading=E*(180/Math.PI));const d=t.getColor();d&&(o.color=d);const m=r[r.length-1].node,u=ICON_STYLE_SEQUENCE[m.namespaceURI],A=makeSequence(o,u);pushSerializeAndPop(n,ICON_STYLE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,A,r,u)}const LABEL_STYLE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["color","scale"]),LABEL_STYLE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{color:makeChildAppender(writeColorTextNode),scale:makeChildAppender(writeScaleTextNode)});function writeLabelStyle(e,t,r){const n={node:e},o={},a=t.getFill();a&&(o.color=a.getColor());const i=t.getScale();i&&1!==i&&(o.scale=i);const l=r[r.length-1].node,s=LABEL_STYLE_SEQUENCE[l.namespaceURI],S=makeSequence(o,s);pushSerializeAndPop(n,LABEL_STYLE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,S,r,s)}const LINE_STYLE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["color","width"]),LINE_STYLE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{color:makeChildAppender(writeColorTextNode),width:makeChildAppender(writeDecimalTextNode)});function writeLineStyle(e,t,r){const n={node:e},o={color:t.getColor(),width:Number(t.getWidth())||1},a=r[r.length-1].node,i=LINE_STYLE_SEQUENCE[a.namespaceURI],l=makeSequence(o,i);pushSerializeAndPop(n,LINE_STYLE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,l,r,i)}const GEOMETRY_TYPE_TO_NODENAME={Point:"Point",LineString:"LineString",LinearRing:"LinearRing",Polygon:"Polygon",MultiPoint:"MultiGeometry",MultiLineString:"MultiGeometry",MultiPolygon:"MultiGeometry",GeometryCollection:"MultiGeometry"},GEOMETRY_NODE_FACTORY=function(e,t,r){if(e){const r=t[t.length-1].node;return createElementNS(r.namespaceURI,GEOMETRY_TYPE_TO_NODENAME[e.getType()])}},POINT_NODE_FACTORY=makeSimpleNodeFactory("Point"),LINE_STRING_NODE_FACTORY=makeSimpleNodeFactory("LineString"),LINEAR_RING_NODE_FACTORY=makeSimpleNodeFactory("LinearRing"),POLYGON_NODE_FACTORY=makeSimpleNodeFactory("Polygon"),MULTI_GEOMETRY_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{LineString:makeChildAppender(writePrimitiveGeometry),Point:makeChildAppender(writePrimitiveGeometry),Polygon:makeChildAppender(writePolygon),GeometryCollection:makeChildAppender(writeMultiGeometry)});function writeMultiGeometry(e,t,r){const n={node:e},o=t.getType();let a,i=[];if("GeometryCollection"===o)t.getGeometriesArrayRecursive().forEach((function(e){const t=e.getType();if("MultiPoint"===t)i=i.concat(e.getPoints());else if("MultiLineString"===t)i=i.concat(e.getLineStrings());else if("MultiPolygon"===t)i=i.concat(e.getPolygons());else{if("Point"!==t&&"LineString"!==t&&"Polygon"!==t)throw new Error("Unknown geometry type");i.push(e)}})),a=GEOMETRY_NODE_FACTORY;else if("MultiPoint"===o)i=t.getPoints(),a=POINT_NODE_FACTORY;else if("MultiLineString"===o)i=t.getLineStrings(),a=LINE_STRING_NODE_FACTORY;else{if("MultiPolygon"!==o)throw new Error("Unknown geometry type");i=t.getPolygons(),a=POLYGON_NODE_FACTORY}pushSerializeAndPop(n,MULTI_GEOMETRY_SERIALIZERS,a,i,r)}const BOUNDARY_IS_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{LinearRing:makeChildAppender(writePrimitiveGeometry)});function writeBoundaryIs(e,t,r){pushSerializeAndPop({node:e},BOUNDARY_IS_SERIALIZERS,LINEAR_RING_NODE_FACTORY,[t],r)}const PLACEMARK_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{ExtendedData:makeChildAppender(writeExtendedData),MultiGeometry:makeChildAppender(writeMultiGeometry),LineString:makeChildAppender(writePrimitiveGeometry),LinearRing:makeChildAppender(writePrimitiveGeometry),Point:makeChildAppender(writePrimitiveGeometry),Polygon:makeChildAppender(writePolygon),Style:makeChildAppender(writeStyle),address:makeChildAppender(writeStringTextNode),description:makeChildAppender(writeStringTextNode),name:makeChildAppender(writeStringTextNode),open:makeChildAppender(writeBooleanTextNode),phoneNumber:makeChildAppender(writeStringTextNode),styleUrl:makeChildAppender(writeStringTextNode),visibility:makeChildAppender(writeBooleanTextNode)}),PLACEMARK_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["name","open","visibility","address","phoneNumber","description","styleUrl","Style"]),EXTENDEDDATA_NODE_FACTORY=makeSimpleNodeFactory("ExtendedData");function writePlacemark(e,t,r){const n={node:e};t.getId()&&e.setAttribute("id",t.getId());const o=t.getProperties(),a={address:1,description:1,name:1,open:1,phoneNumber:1,styleUrl:1,visibility:1};a[t.getGeometryName()]=1;const i=Object.keys(o||{}).filter((function(e){return!a[e]})),l=t.getStyleFunction();if(l){const e=l(t,0);if(e){const r=Array.isArray(e)?e:[e];let n=r;if(t.getGeometry()&&(n=r.filter((function(e){const r=e.getGeometryFunction()(t);if(r){const e=r.getType();return"GeometryCollection"===e?r.getGeometriesArrayRecursive().filter((function(e){const t=e.getType();return"Point"===t||"MultiPoint"===t})).length:"Point"===e||"MultiPoint"===e}}))),this.writeStyles_){let e=r,a=r;t.getGeometry()&&(e=r.filter((function(e){const r=e.getGeometryFunction()(t);if(r){const e=r.getType();return"GeometryCollection"===e?r.getGeometriesArrayRecursive().filter((function(e){const t=e.getType();return"LineString"===t||"MultiLineString"===t})).length:"LineString"===e||"MultiLineString"===e}})),a=r.filter((function(e){const r=e.getGeometryFunction()(t);if(r){const e=r.getType();return"GeometryCollection"===e?r.getGeometriesArrayRecursive().filter((function(e){const t=e.getType();return"Polygon"===t||"MultiPolygon"===t})).length:"Polygon"===e||"MultiPolygon"===e}}))),o.Style={pointStyles:n,lineStyles:e,polyStyles:a}}if(n.length&&void 0===o.name){const e=n[0].getText();e&&(o.name=e.getText())}}}const s=r[r.length-1].node,S=PLACEMARK_SEQUENCE[s.namespaceURI],c=makeSequence(o,S);if(pushSerializeAndPop(n,PLACEMARK_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,c,r,S),i.length>0){const e={names:i,values:makeSequence(o,i),schemaUrl:featureSchemaUrls.get(t)};pushSerializeAndPop(n,PLACEMARK_SERIALIZERS,EXTENDEDDATA_NODE_FACTORY,[e],r)}const E=r[0];let d=t.getGeometry();d&&(d=transformGeometryWithOptions(d,!0,E)),pushSerializeAndPop(n,PLACEMARK_SERIALIZERS,GEOMETRY_NODE_FACTORY,[d],r)}const PRIMITIVE_GEOMETRY_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["extrude","tessellate","altitudeMode","coordinates"]),PRIMITIVE_GEOMETRY_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{extrude:makeChildAppender(writeBooleanTextNode),tessellate:makeChildAppender(writeBooleanTextNode),altitudeMode:makeChildAppender(writeStringTextNode),coordinates:makeChildAppender(writeCoordinatesTextNode)});function writePrimitiveGeometry(e,t,r){const n=t.getFlatCoordinates(),o={node:e};o.layout=t.getLayout(),o.stride=t.getStride();const a=t.getProperties();a.coordinates=n;const i=r[r.length-1].node,l=PRIMITIVE_GEOMETRY_SEQUENCE[i.namespaceURI],s=makeSequence(a,l);pushSerializeAndPop(o,PRIMITIVE_GEOMETRY_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,s,r,l)}const POLY_STYLE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["color","fill","outline"]),POLYGON_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{outerBoundaryIs:makeChildAppender(writeBoundaryIs),innerBoundaryIs:makeChildAppender(writeBoundaryIs)}),INNER_BOUNDARY_NODE_FACTORY=makeSimpleNodeFactory("innerBoundaryIs"),OUTER_BOUNDARY_NODE_FACTORY=makeSimpleNodeFactory("outerBoundaryIs");function writePolygon(e,t,r){const n=t.getLinearRings(),o=n.shift(),a={node:e};pushSerializeAndPop(a,POLYGON_SERIALIZERS,INNER_BOUNDARY_NODE_FACTORY,n,r),pushSerializeAndPop(a,POLYGON_SERIALIZERS,OUTER_BOUNDARY_NODE_FACTORY,[o],r)}const POLY_STYLE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{color:makeChildAppender(writeColorTextNode),fill:makeChildAppender(writeBooleanTextNode),outline:makeChildAppender(writeBooleanTextNode)});function writePolyStyle(e,t,r){const n={node:e},o=t.getFill(),a=t.getStroke(),i={color:o?o.getColor():void 0,fill:!!o&&void 0,outline:!!a&&void 0},l=r[r.length-1].node,s=POLY_STYLE_SEQUENCE[l.namespaceURI],S=makeSequence(i,s);pushSerializeAndPop(n,POLY_STYLE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,S,r,s)}function writeScaleTextNode(e,t){writeDecimalTextNode(e,Math.round(1e6*t)/1e6)}const STYLE_SEQUENCE=makeStructureNS(NAMESPACE_URIS,["IconStyle","LabelStyle","LineStyle","PolyStyle","BalloonStyle"]),STYLE_SERIALIZERS=makeStructureNS(NAMESPACE_URIS,{IconStyle:makeChildAppender(writeIconStyle),LabelStyle:makeChildAppender(writeLabelStyle),LineStyle:makeChildAppender(writeLineStyle),PolyStyle:makeChildAppender(writePolyStyle),BalloonStyle:makeChildAppender(((e,t)=>{const r=getDocument().createCDATASection(t.getText()),n=getDocument().createElement("text");n.appendChild(r),e.appendChild(n)}))});function writeStyle(e,t,r){const n={node:e},o={};if(t.pointStyles.length){const e=t.pointStyles[0].getText();e&&(o.LabelStyle=e);const r=t.pointStyles[0].getImage();r&&"function"==typeof r.getSrc&&(o.IconStyle=r);const n=t.pointStyles[0]._balloon;n&&(o.BalloonStyle=n)}if(t.lineStyles.length){const e=t.lineStyles[0].getStroke();e&&(o.LineStyle=e)}if(t.polyStyles.length){const e=t.polyStyles[0].getStroke();e&&!o.LineStyle&&(o.LineStyle=e),o.PolyStyle=t.polyStyles[0]}const a=r[r.length-1].node,i=STYLE_SEQUENCE[a.namespaceURI],l=makeSequence(o,i);pushSerializeAndPop(n,STYLE_SERIALIZERS,OBJECT_PROPERTY_NODE_FACTORY,l,r,i)}function writeVec2(e,t){e.setAttribute("x",String(t.x)),e.setAttribute("y",String(t.y)),e.setAttribute("xunits",t.xunits),e.setAttribute("yunits",t.yunits)}export default KML;