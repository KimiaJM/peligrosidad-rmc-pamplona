"use strict";(self.webpackChunksitna_map_project_by_kimia_jimenez_majidi=self.webpackChunksitna_map_project_by_kimia_jimenez_majidi||[]).push([[16,608,5924],{16:(e,t,o)=>{o.r(t),o.d(t,{default:()=>r});var s=o(608),i=o(3301);class n extends s.default{constructor(){super(...arguments),this.url=this.options.url||"https://api-processes.idee.es/processes/getElevation",this.minimumElevation=this.options.minimumElevation||-9998,this.nativeCRS="EPSG:4326"}async request(e={}){const t={...e,data:{formato:"geojson",withCoord:!0,outputFormat:"array"}};let o;o=e.crs!==this.nativeCRS?i.A.reproject(e.coordinates,e.crs,this.nativeCRS):e.coordinates;const s={type:"FeatureCollection",features:o.map((e=>({type:"Feature",geometry:{type:"Point",coordinates:e}})))};return t.data.geom=JSON.stringify(s),await super.request(t)}parseResponse(e,t){let o=[];return e.values&&(o=t.crs!==this.nativeCRS?i.A.reproject(e.values,this.nativeCRS,t.crs):e.values),super.parseResponse({coordinates:o},t)}}const r=n},608:(e,t,o)=>{o.r(t),o.d(t,{default:()=>n});var s=o(5924);class i extends s.default{async request(e={}){const t=this.url+"/execution";return await(await this.getProxificationTool()).fetchJSON(t,{method:"POST",data:JSON.stringify({inputs:e.data})})}}const n=i},5924:(e,t,o)=>{o.r(t),o.d(t,{default:()=>n});var s=o(8038),i=o(3301);const n=class{#e;#t;constructor(e){const t=this;t.options=e||{},t.url=t.options.url,t.process=t.options.process,t.minimumElevation=t.options.minimumElevation,i.A.isFunction(t.options.request)&&(t.request=t.options.request),i.A.isFunction(t.options.parseResponse)&&(t.parseResponse=t.options.parseResponse)}async getElevation(e={}){const t=this,o={...e};void 0===o.resolution&&(o.resolution=t.options.resolution),void 0===o.sampleNumber&&(o.sampleNumber=t.options.sampleNumber);const s=await t.request(e);return(o.responseCallback||t.parseResponse).call(t,s,o)}async request(e={}){const t=this;if(e.dataInputs||e.body){const{default:i}=await o.e(761).then(o.bind(o,761)),n={process:e.process||t.process,dataInputs:e.dataInputs,responseType:SITNA.Consts.mimeType.JSON,version:e.serviceVersion||t.serviceVersion||"1.0.0",output:e.output},r="boolean"==typeof e.contentType?e.contentType:e.contentType||SITNA.Consts.mimeType.XML;return(await s.A.ajax({url:t.url,method:"POST",contentType:r,responseType:SITNA.Consts.mimeType.JSON,data:e.body||i.buildExecuteQuery(n)})).data}throw Error("Request is not valid for elevation service")}parseResponse(e,t){var o=this;return e.coordinates&&e.coordinates.forEach((function(e){e[2]<o.minimumElevation&&(e[2]=null)})),e.coordinates||[]}cancelRequest(e){}async getProxificationTool(){if(!this.#e){this.#t||(this.#t=Promise.resolve().then(o.bind(o,8991)));const e=(await this.#t).default;this.#e=new e(s.A.proxify)}return this.#e}}}}]);