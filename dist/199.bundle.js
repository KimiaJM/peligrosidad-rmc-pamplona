"use strict";(self.webpackChunksitna_map_project_by_kimia_jimenez_majidi=self.webpackChunksitna_map_project_by_kimia_jimenez_majidi||[]).push([[199,5924],{199:(e,o,s)=>{s.r(o),s.d(o,{default:()=>a});var t=s(8038),i=s(5924),n=s(797);class r extends i.default{constructor(){super(...arguments);const e=this;e.url=e.options.url||"//idena.navarra.es/ogc/wps",e.process=e.options.process||"gs:ExtractRasterPoints",e.coverageClass=e.options.coverageClass||"MDT_maxima_actualidad,Alturas_maxima_actualidad",e.minimumElevation=e.options.minimumElevation||-9998}request(e={}){const o={coordinates:e.coordinates,type:n.A.geom.POLYLINE};1===e.coordinates.length&&(o.coordinates=e.coordinates[0],o.type=n.A.geom.POINT);let s=e.coverageClass||this.coverageClass;const i=s.indexOf(",");s&&i>=0&&!e.includeHeights&&(s=s.substr(0,i));const r={coverageClass:s,geometry:{mimeType:n.A.mimeType.JSON,value:t.A.wrap.Geometry.toGeoJSON(o)}};if(e.crs){var a=e.crs.lastIndexOf(":");a<0&&(a=e.crs.lastIndexOf("#")),r.srid=e.crs.substr(a+1)}return super.request.call(this,{dataInputs:r},e)}parseResponse(e,o){const s=this,t=o.coverageClass||s.coverageClass,i=o.includeHeights&&t?t.split(",").length:1;if(i<=1)return super.parseResponse.call(s,e,o);if(e.coordinates){const o=e.coordinates,t=o.length/i,a=o.slice(0,t);var n;for(n=0;n<t;n++){const e=a[n];e[2]<s.minimumElevation&&(e[2]=null)}for(n=1;n<i;n++){const e=n*t;for(var r=0;r<t;r++){const t=o[r+e][2];a[r].push(t<s.minimumElevation?null:t)}}return a}return[]}}const a=r},5924:(e,o,s)=>{s.r(o),s.d(o,{default:()=>n});var t=s(8038),i=s(3301);const n=class{#e;#o;constructor(e){const o=this;o.options=e||{},o.url=o.options.url,o.process=o.options.process,o.minimumElevation=o.options.minimumElevation,i.A.isFunction(o.options.request)&&(o.request=o.options.request),i.A.isFunction(o.options.parseResponse)&&(o.parseResponse=o.options.parseResponse)}async getElevation(e={}){const o=this,s={...e};void 0===s.resolution&&(s.resolution=o.options.resolution),void 0===s.sampleNumber&&(s.sampleNumber=o.options.sampleNumber);const t=await o.request(e);return(s.responseCallback||o.parseResponse).call(o,t,s)}async request(e={}){const o=this;if(e.dataInputs||e.body){const{default:i}=await s.e(761).then(s.bind(s,761)),n={process:e.process||o.process,dataInputs:e.dataInputs,responseType:SITNA.Consts.mimeType.JSON,version:e.serviceVersion||o.serviceVersion||"1.0.0",output:e.output},r="boolean"==typeof e.contentType?e.contentType:e.contentType||SITNA.Consts.mimeType.XML;return(await t.A.ajax({url:o.url,method:"POST",contentType:r,responseType:SITNA.Consts.mimeType.JSON,data:e.body||i.buildExecuteQuery(n)})).data}throw Error("Request is not valid for elevation service")}parseResponse(e,o){var s=this;return e.coordinates&&e.coordinates.forEach((function(e){e[2]<s.minimumElevation&&(e[2]=null)})),e.coordinates||[]}cancelRequest(e){}async getProxificationTool(){if(!this.#e){this.#o||(this.#o=Promise.resolve().then(s.bind(s,8991)));const e=(await this.#o).default;this.#e=new e(t.A.proxify)}return this.#e}}}}]);